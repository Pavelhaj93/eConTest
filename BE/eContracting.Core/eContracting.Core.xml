<?xml version="1.0"?>
<doc>
    <assembly>
        <name>eContracting.Core</name>
    </assembly>
    <members>
        <member name="F:eContracting.BaseApiServiceOptions.User">
            <summary>
            The user.
            </summary>
        </member>
        <member name="F:eContracting.BaseApiServiceOptions.Password">
            <summary>
            The password.
            </summary>
        </member>
        <member name="F:eContracting.BaseApiServiceOptions.Url">
            <summary>
            The URL.
            </summary>
        </member>
        <member name="P:eContracting.BaseApiServiceOptions.IsHttps">
            <summary>
            Gets a value indicating whether <see cref="F:eContracting.BaseApiServiceOptions.Url"/> is HTTPS.
            </summary>
        </member>
        <member name="M:eContracting.BaseApiServiceOptions.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.BaseApiServiceOptions"/> class.
            </summary>
            <param name="url">The URL.</param>
            <param name="base64Username">The base64 username.</param>
            <param name="base64password">The base64password.</param>
            <exception cref="T:System.ArgumentException">
            Url cannot be empty - url
            or
            Username cannot be empty - base64Username
            or
            Password cannot be empty - base64password
            </exception>
        </member>
        <member name="T:eContracting.EcontractingApplicationException">
            <summary>
            Represents application error (invalid / incomplete data, another uncatched error).
            </summary>
            <seealso cref="T:eContracting.EcontractingCodeException" />
        </member>
        <member name="M:eContracting.EcontractingApplicationException.#ctor(eContracting.Models.ErrorModel)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.EcontractingApplicationException"/> class.
            </summary>
            <param name="error">The error.</param>
        </member>
        <member name="M:eContracting.EcontractingApplicationException.#ctor(eContracting.Models.ErrorModel,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.EcontractingApplicationException"/> class.
            </summary>
            <param name="error">The error.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:eContracting.EcontractingCodeException">
            <summary>
            Represent abstract base error with custom code.
            </summary>
            <seealso cref="T:System.ApplicationException" />
            <seealso cref="T:eContracting.Models.ErrorModel"/>
        </member>
        <member name="F:eContracting.EcontractingCodeException.Error">
            <summary>
            The error.
            </summary>
        </member>
        <member name="M:eContracting.EcontractingCodeException.#ctor(eContracting.Models.ErrorModel)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.EcontractingCodeException"/> class.
            </summary>
            <param name="error">The error.</param>
        </member>
        <member name="M:eContracting.EcontractingCodeException.#ctor(eContracting.Models.ErrorModel,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.EcontractingCodeException"/> class.
            </summary>
            <param name="error">The error.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="M:eContracting.EcontractingSignException.#ctor(eContracting.Models.ErrorModel)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.EcontractingSignException"/> class.
            </summary>
            <param name="error">The error.</param>
        </member>
        <member name="P:eContracting.ERROR_CODES.UNKNOWN">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="T:eContracting.EVENT_NAMES">
            <summary>
            List of events for <see cref="T:eContracting.IEventLogger"/>.
            </summary>
        </member>
        <member name="F:eContracting.EVENT_NAMES.LOGIN">
            <summary>
            When user was logged in.
            </summary>
        </member>
        <member name="F:eContracting.EVENT_NAMES.SIGN_DOCUMENT">
            <summary>
            When user signed a document.
            </summary>
        </member>
        <member name="F:eContracting.EVENT_NAMES.UPLOAD_ATTACHMENT">
            <summary>
            When user uploaded an attachment.
            </summary>
        </member>
        <member name="F:eContracting.EVENT_NAMES.SUBMIT_OFFER">
            <summary>
            When user submitted an offer.
            </summary>
        </member>
        <member name="T:eContracting.IEventLogger">
            <summary>
            Tracks common user actions on a website.
            </summary>
        </member>
        <member name="M:eContracting.IEventLogger.Add(System.String,System.String,eContracting.EVENT_NAMES)">
            <summary>
            Adds information for new log event.
            </summary>
            <param name="sessionId">The session identifier.</param>
            <param name="guid">The unique identifier.</param>
            <param name="eventName">Name of the event.</param>
        </member>
        <member name="M:eContracting.IEventLogger.Add(System.String,System.String,eContracting.EVENT_NAMES,System.String)">
            <summary>
            Adds information for new log event.
            </summary>
            <param name="sessionId">The session identifier.</param>
            <param name="guid">The unique identifier.</param>
            <param name="eventName">Name of the event.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:eContracting.IEventLogger.Add(eContracting.Models.EventLogModel)">
            <summary>
            Adds new event log.
            </summary>
            <param name="eventLog">The event log.</param>
        </member>
        <member name="M:eContracting.EcontractingDataException.#ctor(eContracting.Models.ErrorModel)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.EcontractingDataException"/> class.
            </summary>
            <param name="error">The error.</param>
        </member>
        <member name="M:eContracting.EcontractingDataException.#ctor(eContracting.Models.ErrorModel,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.EcontractingDataException"/> class.
            </summary>
            <param name="error">The error.</param>
            <param name="innerException">The inner exception.</param>
        </member>
        <member name="T:eContracting.IServiceFactory">
            <summary>
            Factory to create correct instances of the services based on input parameters.
            </summary>
        </member>
        <member name="M:eContracting.IServiceFactory.CreateApi(eContracting.CacheApiServiceOptions)">
            <summary>
            Creates API for <see cref="T:eContracting.Services.ZCCH_CACHE_APIClient"/> based on input <paramref name="options"/>.
            </summary>
            <param name="options">The options.</param>
            <returns>Instance of API client.</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:eContracting.IServiceFactory.CreateApi(eContracting.SignApiServiceOptions)" -->
        <member name="T:eContracting.ISessionProvider">
            <summary>
            Represents wrapper over <see cref="T:System.Web.SessionState.HttpSessionState"/>.
            </summary>
        </member>
        <member name="M:eContracting.ISessionProvider.GetId">
            <summary>
            Gets session ID.
            </summary>
            <returns>Session ID or null.</returns>
        </member>
        <member name="M:eContracting.ISessionProvider.GetValue``1(System.String)">
            <summary>
            Gets the value from session.
            </summary>
            <typeparam name="T">Return type.</typeparam>
            <param name="key">The key.</param>
            <returns>Typed value or null.</returns>
        </member>
        <member name="M:eContracting.ISessionProvider.Set``1(System.String,``0,System.Boolean)">
            <summary>
            Sets <paramref name="value"/> under specific <paramref name="key"/> into session. If <paramref name="key"/> exist, value will be overwriten.
            </summary>
            <typeparam name="T">The type.</typeparam>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
            <param name="throwException">The exception when session is not accessible.</param>
            <exception cref="T:System.InvalidOperationException">When <paramref name="throwException"/> = true and session is not accessible.</exception>
        </member>
        <member name="M:eContracting.ISessionProvider.Remove(System.String)">
            <summary>
            Removes value from session under specified <paramref name="key"/>.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="M:eContracting.ISessionProvider.SetTimeout(System.Int32)">
            <summary>
            Sets the timeout in minutes.
            </summary>
            <param name="minutes">The minutes.</param>
        </member>
        <member name="T:eContracting.IStartup">
            <summary>
            Initialize the code in <see cref="M:eContracting.IStartup.Initialize"/> method when Sitecore stars (initialize pipeline).
            </summary>
            <remarks>
            Do not use DI because something (like ISitecoreContext) won't be available in initialize pipeline.
            </remarks>
        </member>
        <member name="M:eContracting.IStartup.Initialize">
            <summary>
            Initialize the code.
            </summary>
        </member>
        <member name="M:eContracting.ITextService.FindByKey(System.String)">
            <summary>
            Tries to find text by give <paramref name="key"/>.
            </summary>
            <param name="key">The key.</param>
            <returns>Found text or empty string.</returns>
        </member>
        <member name="M:eContracting.ITextService.FindByKey(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Tries to find text by give <paramref name="key"/> and try to replace tokens from <paramref name="replaceTokens"/> collection.
            </summary>
            <param name="key">The key.</param>
            <param name="replaceTokens">The replace tokens collection. <see cref="!:KeyValuePair.Key"/> is token, <see cref="!:KeyValuePair.Value"/> is replacement.</param>
            <returns></returns>
        </member>
        <member name="M:eContracting.ITextService.ErrorCode(System.String)">
            <summary>
            Translate error code to readable message.
            </summary>
            <param name="code">The code.</param>
            <returns>Rich message or <paramref name="code"/>.</returns>
        </member>
        <member name="T:eContracting.IUserFileCacheService">
            <summary>
            Cache for user files relevant only for current user. Data cannot be shared among sessions.
            </summary>
        </member>
        <member name="M:eContracting.IUserFileCacheService.Set(eContracting.Models.DbUploadGroupFileModel)">
            <summary>
            Adds or rewrite <paramref name="group"/> under specific <see cref="P:eContracting.Models.DbUploadGroupFileModel.Key"/>.
            </summary>
            <param name="group">The group.</param>
            <exception cref="T:System.ApplicationException">When data were not stored.</exception>
        </member>
        <member name="M:eContracting.IUserFileCacheService.Set(eContracting.Models.DbSignedFileModel)">
            <summary>
            Adds or rewrite <paramref name="file"/> under specific <see cref="P:eContracting.Models.DbSignedFileModel.Key"/>.
            </summary>
            <param name="file">The signed file model.</param>
            <exception cref="T:System.ApplicationException">When data were not stored.</exception>
        </member>
        <member name="M:eContracting.IUserFileCacheService.FindSignedFile(eContracting.Models.DbSearchParameters)">
            <summary>
            Gets the signed file by specific <paramref name="search"/> parameters.
            </summary>
            <param name="search">The search parameters.</param>
            <returns>File or null.</returns>
        </member>
        <member name="M:eContracting.IUserFileCacheService.FindSignedFiles(eContracting.Models.DbSearchParameters)">
            <summary>
            Gets a list of signed files by specific <paramref name="search"/> parameters.
            </summary>
            <param name="search">The search parameters.</param>
            <returns>List of Files or null.</returns>
        </member>
        <member name="M:eContracting.IUserFileCacheService.FindGroup(eContracting.Models.DbSearchParameters)">
            <summary>
            Gets the group data by specific <paramref name="search"/> parameters.
            </summary>
            <param name="search">The search parameters.</param>
            <returns>Data or null.</returns>
        </member>
        <member name="M:eContracting.IUserFileCacheService.RemoveSignedFile(eContracting.Models.DbSearchParameters)">
            <summary>
            Removes the signed file under specific <paramref name="search"/> parameters.
            </summary>
            <param name="search">The search parameters.</param>
        </member>
        <member name="M:eContracting.IUserFileCacheService.RemoveGroup(eContracting.Models.DbSearchParameters)">
            <summary>
            Removes the group under specific <paramref name="search"/> parameters>.
            </summary>
            <param name="search">The search parameters.</param>
        </member>
        <member name="M:eContracting.IUserFileCacheService.Clear(eContracting.Models.DbSearchParameters)">
            <summary>
            Removes all data base on <paramref name="search"/> parameters.
            </summary>
            <param name="search">The search parameters.</param>
        </member>
        <member name="M:eContracting.IUserFileCacheService.FindGroups(eContracting.Models.DbSearchParameters)">
            <summary>
            Gets mutliple group data by specific <paramref name="search"/> parameters.
            </summary>
            <param name="search">The search parameters.</param>
            <returns>Data or null.</returns>
        </member>
        <member name="M:eContracting.IUserFileCacheService.GetTotalOutputFileSize(eContracting.Models.DbSearchParameters)">
            <summary>
            Gets total size of UploadFileGroup output files (PDFs)
            </summary>
            <param name="search"></param>
            <returns></returns>
        </member>
        <member name="T:eContracting.Models.BasePageModel">
            <summary>
            Represents common page with <see cref="P:eContracting.Models.BasePageModel.PageTitle"/>.
            </summary>
            <seealso cref="T:eContracting.Models.BaseSitecoreModel" />
        </member>
        <member name="P:eContracting.Models.BasePageModel.PageTitle">
            <summary>
            Gets or sets the page title.
            </summary>
        </member>
        <member name="T:eContracting.Models.BasePageWithStepsModel">
            <summary>
            Represents common page with <see cref="P:eContracting.Models.BasePageWithStepsModel.Step"/>.
            </summary>
            <seealso cref="T:eContracting.Models.BasePageModel" />
        </member>
        <member name="P:eContracting.Models.BasePageWithStepsModel.Step">
            <summary>
            Gets or sets the step.
            </summary>
        </member>
        <member name="T:eContracting.Models.ColorModel">
            <summary>
            A color definition used from RWE collection <c>/sitecore/system/Modules/innogy/components/code-lists/color-themes</c>.
            </summary>
            <seealso cref="T:eContracting.Models.BaseSitecoreModel" />
        </member>
        <member name="P:eContracting.Models.ColorModel.Value">
            <summary>
            Gets or sets hexadecimal value.
            </summary>
        </member>
        <member name="T:eContracting.Models.DbFileAttributeModel">
            <summary>
            Represents additional file attributes serialized by its purpose.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbFileAttributeModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbFileAttributeModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbFileAttributeModel.Value">
            <summary>
            Gets or sets the value.
            </summary>
        </member>
        <member name="T:eContracting.Models.DbFileModel">
            <summary>
            Represents physical file.
            </summary>
        </member>
        <member name="M:eContracting.Models.DbFileModel.#ctor">
            <summary>
            Public constructor, sets the CreateDate
            </summary>
        </member>
        <member name="P:eContracting.Models.DbFileModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbFileModel.Key">
            <summary>
            Gets or sets the key.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbFileModel.FileName">
            <summary>
            Gets or sets the file name without extension.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbFileModel.FileExtension">
            <summary>
            Gets or sets the file extension.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbFileModel.MimeType">
            <summary>
            Gets or sets the MIME type of the file.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbFileModel.Size">
            <summary>
            Gets or sets file size.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbFileModel.Content">
            <summary>
            Gets or sets file content in bytes.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbFileModel.CreateDate">
            <summary>
            Gets or sets datetime when the file was saved into our database
            </summary>
        </member>
        <member name="T:eContracting.Models.DbSignedFileModel">
            <summary>
            Represents signed file like 'Plná moc.pdf'
            </summary>
        </member>
        <member name="P:eContracting.Models.DbSignedFileModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbSignedFileModel.SessionId">
            <summary>
            Gets or sets the session identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbSignedFileModel.Guid">
            <summary>
            Gets or sets the unique offer identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbSignedFileModel.Key">
            <summary>
            Gets or sets unique key.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbSignedFileModel.File">
            <summary>
            Gets or sets the file.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbSignedFileModel.CreateDate">
            <summary>
            Gets or sets datetime when the file was saved into our database
            </summary>
        </member>
        <member name="M:eContracting.Models.DbSignedFileModel.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:eContracting.Models.DbSignedFileModel"/> class from being created.
            </summary>
        </member>
        <member name="M:eContracting.Models.DbSignedFileModel.#ctor(System.String,System.String,System.String,eContracting.Models.OfferAttachmentModel)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.DbSignedFileModel"/> class.
            </summary>
            <param name="key">The key.</param>
            <param name="guid">The unique identifier.</param>
            <param name="sessionId">The session identifier.</param>
            <param name="attachment">The attachment.</param>
        </member>
        <member name="M:eContracting.Models.DbSignedFileModel.ToAttachment">
            <summary>
            Converts current model to attachment model.
            </summary>
            <returns>The attachment model.</returns>
        </member>
        <member name="T:eContracting.Models.DbUploadGroupFileModel">
            <summary>
            Represents one upload field with multiple attached files.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbUploadGroupFileModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbUploadGroupFileModel.Key">
            <summary>
            Gets or sets unique group key.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbUploadGroupFileModel.SessionId">
            <summary>
            Gets or sets the session identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbUploadGroupFileModel.Guid">
            <summary>
            Gets or sets offer unique identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbUploadGroupFileModel.OutputFile">
            <summary>
            Gets or sets the output single file optimized from <see cref="P:eContracting.Models.DbUploadGroupFileModel.OriginalFiles"/>.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbUploadGroupFileModel.OriginalFiles">
            <summary>
            Gets or sets original uploaded files.
            </summary>
        </member>
        <member name="P:eContracting.Models.DbUploadGroupFileModel.CreateDate">
            <summary>
            Gets or sets datetime when the file was saved into our database
            </summary>
        </member>
        <member name="T:eContracting.Models.DefinitionCombinationContainerModel">
            <summary>
            Represent container for all definition including data for default values.
            </summary>
            <seealso cref="T:eContracting.Models.DefinitionCombinationDataModel" />
        </member>
        <member name="T:eContracting.Models.DefinitionCombinationDataModel">
            <summary>
            Represents data for combination.
            </summary>
            <seealso cref="T:eContracting.Models.BaseSitecoreModel" />
        </member>
        <member name="T:eContracting.Models.ErrorModel">
            <summary>
            Error description with it's unique code.
            </summary>
        </member>
        <member name="F:eContracting.Models.ErrorModel.Code">
            <summary>
            The code.
            </summary>
        </member>
        <member name="F:eContracting.Models.ErrorModel.Description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="M:eContracting.Models.ErrorModel.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.ErrorModel"/> struct.
            </summary>
            <param name="code">The code.</param>
            <param name="description">The description.</param>
        </member>
        <member name="M:eContracting.Models.ErrorModel.ToString">
            <summary>
            Converts to string in format '[<see cref="F:eContracting.Models.ErrorModel.Code"/>] <see cref="F:eContracting.Models.ErrorModel.Description"/>'.
            </summary>
        </member>
        <member name="T:eContracting.Models.EventLogModel">
            <summary>
            Represent a log event entry.
            </summary>
        </member>
        <member name="F:eContracting.Models.EventLogModel.Time">
            <summary>
            Time in UTC format when this event happened.
            </summary>
        </member>
        <member name="F:eContracting.Models.EventLogModel.SessionId">
            <summary>
            Session id.
            </summary>
        </member>
        <member name="F:eContracting.Models.EventLogModel.Guid">
            <summary>
            Offer guid identifier.
            </summary>
        </member>
        <member name="F:eContracting.Models.EventLogModel.Event">
            <summary>
            Type of the event.
            </summary>
        </member>
        <member name="F:eContracting.Models.EventLogModel.Message">
            <summary>
            The additional message.
            </summary>
        </member>
        <member name="M:eContracting.Models.EventLogModel.#ctor(System.String,System.String,eContracting.EVENT_NAMES,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.EventLogModel"/> class.
            </summary>
            <param name="sessionId">The session identifier.</param>
            <param name="guid">The unique identifier.</param>
            <param name="eventName">Name of the event.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:eContracting.Models.EventLogModel.#ctor(System.DateTime,System.String,System.String,eContracting.EVENT_NAMES,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.EventLogModel"/> class.
            </summary>
            <param name="time">The time.</param>
            <param name="sessionId">The session identifier.</param>
            <param name="guid">The unique identifier.</param>
            <param name="eventName">Name of the event.</param>
            <param name="message">The message.</param>
            <exception cref="T:System.ArgumentException">
            Value cannot be empty - sessionId
            or
            Value cannot be empty - guid
            </exception>
        </member>
        <member name="T:eContracting.Models.OfferFileXmlModel">
            <summary>
            Wrapper over <see cref="T:eContracting.Services.ZCCH_ST_FILE"/> with extra properties.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferFileXmlModel.File">
            <summary>
            Real file from SAP. Cannot be null.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferFileXmlModel.Attachment">
            <summary>
            Gets or sets related <see cref="T:eContracting.Models.OfferAttachmentXmlModel"/> to this file.
            </summary>
            <value>
            The attachment.
            </value>
        </member>
        <member name="P:eContracting.Models.OfferFileXmlModel.IdAttach">
            <summary>
            Gets value of IDATTACH from the <see cref="P:eContracting.Services.ZCCH_ST_FILE.ATTRIB"/> attributes.
            </summary>
            <returns>Value or null.</returns>
        </member>
        <member name="P:eContracting.Models.OfferFileXmlModel.Template">
            <summary>
            Gets value of TEMPLATE from the <see cref="P:eContracting.Services.ZCCH_ST_FILE.ATTRIB"/> attributes.
            </summary>
            <returns>Value or null</returns>
        </member>
        <member name="P:eContracting.Models.OfferFileXmlModel.Counter">
            <summary>
            Gets the counter integer value from <see cref="P:eContracting.Services.ZCCH_ST_FILE.ATTRIB"/>. If attribute <see cref="F:eContracting.Constants.OfferAttributes.COUNTER"/> is not valid, returns 100;
            </summary>
            <returns>Position from <see cref="F:eContracting.Constants.OfferAttributes.COUNTER"/>, otherwise 100</returns>
        </member>
        <member name="P:eContracting.Models.OfferFileXmlModel.Product">
            <summary>
            Gets value of PRODUCT from the <see cref="P:eContracting.Services.ZCCH_ST_FILE.ATTRIB"/> attributes.
            </summary>
            <returns>Value or null.</returns>
        </member>
        <member name="M:eContracting.Models.OfferFileXmlModel.GetRawXml">
            <summary>
            Gets the raw XML from <see cref="P:eContracting.Services.ZCCH_ST_FILE.FILECONTENT"/>.
            </summary>
            <returns>String representation of <see cref="P:eContracting.Services.ZCCH_ST_FILE.FILECONTENT"/> or null.</returns>
        </member>
        <member name="M:eContracting.Models.OfferFileXmlModel.#ctor(eContracting.Services.ZCCH_ST_FILE)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferFileXmlModel"/> class.
            </summary>
            <param name="file">The file.</param>
            <exception cref="T:System.ArgumentNullException">file</exception>
        </member>
        <member name="T:eContracting.Models.OfferSubmitDataModel">
            <summary>
            Represent set of accepted, signed and uploaded documents for an offer.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferSubmitDataModel.Accepted">
            <summary>
            Gets or sets array of <c>accepted</c> unique file IDs.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferSubmitDataModel.Signed">
            <summary>
            Gets or sets array of <c>signed</c> unique file IDs.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferSubmitDataModel.Uploaded">
            <summary>
            Gets or sets array of <c>uploaded</c> unique file IDs.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferSubmitDataModel.Other">
            <summary>
            Gets or sets array of <c>other</c> unique file IDs.
            </summary>
        </member>
        <member name="T:eContracting.Models.OfferSubmitDataUploadsModel">
            <summary>
            Represents upload group for submit an offer.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferSubmitDataUploadsModel.GroupKey">
            <summary>
            Gets or sets the group key.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferSubmitDataUploadsModel.FileKeys">
            <summary>
            Gets or sets the file keys.
            </summary>
        </member>
        <member name="T:eContracting.Models.PageError500Model">
            <summary>
            Represents page model for error page 404.
            </summary>
            <seealso cref="T:eContracting.Models.BasePageModel" />
        </member>
        <member name="P:eContracting.Models.PageError500Model.MainText">
            <summary>
            Gets or sets the page title.
            </summary>
        </member>
        <member name="P:eContracting.Models.PageSessionExpiredModel.PageTitle">
            <summary>
            Gets or sets the page title.
            </summary>
        </member>
        <member name="P:eContracting.Models.PageSessionExpiredModel.MainText">
            <summary>
            Gets or sets the page title.
            </summary>
        </member>
        <member name="T:eContracting.Models.PageThankYouModel">
            <summary>
            Represents model for thank you page.
            </summary>
            <seealso cref="T:eContracting.Models.BasePageWithStepsModel" />
        </member>
        <member name="M:eContracting.Models.PromoBoxModel.GetColor">
            <summary>
            Gets the color in hexadecimal format with leading <c>#</c>.
            </summary>
        </member>
        <member name="P:eContracting.Models.PageAcceptedOfferModel.PageTitle">
            <summary>
            Gets or sets the page title.
            </summary>
        </member>
        <member name="T:eContracting.Models.PageError404Model">
            <summary>
            Represents page model for error page 404.
            </summary>
            <seealso cref="T:eContracting.Models.BasePageModel" />
        </member>
        <member name="P:eContracting.Models.PageError404Model.MainText">
            <summary>
            Gets or sets the page title.
            </summary>
        </member>
        <member name="M:eContracting.Models.JsonAcceptFileModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.JsonAcceptFileModel"/> class.
            </summary>
        </member>
        <member name="M:eContracting.Models.JsonAcceptFileModel.#ctor(eContracting.Models.OfferAttachmentModel)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.JsonAcceptFileModel"/> class.
            </summary>
            <param name="attachment">The attachment.</param>
            <exception cref="T:System.ArgumentNullException">attachment</exception>
        </member>
        <member name="T:eContracting.Models.AuthDataModel">
            <summary>
            Authentication data model to log-in a visitor.
            </summary>
        </member>
        <member name="F:eContracting.Models.AuthDataModel.Guid">
            <summary>
            The unique offer identifier.
            </summary>
        </member>
        <member name="F:eContracting.Models.AuthDataModel.Process">
            <summary>
            The process.
            </summary>
        </member>
        <member name="F:eContracting.Models.AuthDataModel.ProcessType">
            <summary>
            The process type.
            </summary>
        </member>
        <member name="F:eContracting.Models.AuthDataModel.TextParameters">
            <summary>
            The text parameters from offer.
            </summary>
        </member>
        <member name="M:eContracting.Models.AuthDataModel.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:eContracting.Models.AuthDataModel"/> class from being created.
            </summary>
        </member>
        <member name="M:eContracting.Models.AuthDataModel.#ctor(eContracting.Models.OfferModel)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.AuthDataModel"/> class.
            </summary>
            <param name="offer">The offer.</param>
        </member>
        <member name="T:eContracting.Models.BaseSitecoreModel">
            <summary>
            Base model for Sitecore item.
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "P:eContracting.Models.BaseSitecoreModel.ID" -->
        <member name="P:eContracting.Models.BaseSitecoreModel.Name">
            <summary>
            Gets or sets Sitecore item name.
            </summary>
        </member>
        <member name="P:eContracting.Models.BaseSitecoreModel.DisplayName">
            <summary>
            Gets or sets Sitecore item display name.
            </summary>
        </member>
        <member name="P:eContracting.Models.BaseSitecoreModel.Path">
            <summary>
            Gets or sets full path of the item.
            </summary>
        </member>
        <member name="M:eContracting.Models.JsonFilesSectionModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.JsonFilesSectionModel"/> class.
            </summary>
        </member>
        <member name="M:eContracting.Models.JsonFilesSectionModel.#ctor(System.Collections.Generic.IEnumerable{eContracting.Models.JsonFileModel},System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.JsonFilesSectionModel"/> class.
            </summary>
            <param name="files">The files.</param>
            <param name="title">The title.</param>
        </member>
        <member name="M:eContracting.Models.JsonFilesSectionModel.#ctor(System.Collections.Generic.IEnumerable{eContracting.Models.JsonFileModel},System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.JsonFilesSectionModel"/> class.
            </summary>
            <param name="files">The files.</param>
            <param name="title">The title.</param>
            <param name="position">The position.</param>
        </member>
        <member name="T:eContracting.Models.JsonOfferPerexModel">
            <summary>
            Contains data from AD1 - <c>COMMODITY_OFFER_SUMMARY</c>.
            </summary>
        </member>
        <member name="M:eContracting.Models.JsonUploadTemplateModel.#ctor(eContracting.Models.OfferAttachmentModel)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.JsonUploadTemplateModel"/> class.
            </summary>
            <param name="template">The template.</param>
            <exception cref="T:System.ArgumentNullException">template</exception>
        </member>
        <member name="T:eContracting.Models.DefinitionCombinationModel">
            <summary>
            Represents combination of <see cref="P:eContracting.Models.DefinitionCombinationModel.Process"/> and <see cref="P:eContracting.Models.DefinitionCombinationModel.ProcessType"/> with their relevant settings.
            </summary>
            <seealso cref="T:eContracting.Models.BaseSitecoreModel" />
        </member>
        <member name="P:eContracting.Models.DefinitionCombinationModel.Process">
            <summary>
            Gets or sets related process definition.
            </summary>
        </member>
        <member name="P:eContracting.Models.DefinitionCombinationModel.ProcessType">
            <summary>
            Gets or sets related process type definition.
            </summary>
        </member>
        <member name="P:eContracting.Models.DefinitionCombinationModel.IsDefault">
            <summary>
            Gets a value indicating whether this definition is default.
            </summary>
            <value>
              <c>true</c> if this instance is default; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:eContracting.Models.FailedLoginInfoDetailModel">
            <summary>
            Represents detail about failed login
            </summary>
        </member>
        <member name="P:eContracting.Models.FailedLoginInfoDetailModel.Timestamp">
            <summary>
            Gets or sets when it happend.
            </summary>
        </member>
        <member name="P:eContracting.Models.FailedLoginInfoDetailModel.SessionId">
            <summary>
            Gets or sets session ID.
            </summary>
        </member>
        <member name="P:eContracting.Models.FailedLoginInfoDetailModel.BrowserInfo">
            <summary>
            Gets or sets the browser information.
            </summary>
        </member>
        <member name="T:eContracting.Models.FailedLoginInfoModel">
            <summary>
            Represent login failed information base on <see cref="P:eContracting.Models.FailedLoginInfoModel.Guid"/>
            </summary>
        </member>
        <member name="P:eContracting.Models.FailedLoginInfoModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.FailedLoginInfoModel.Guid">
            <summary>
            Gets or sets the user unique identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.FailedLoginInfoModel.FailedAttempts">
            <summary>
            Gets or sets number of failed attempts.
            </summary>
        </member>
        <member name="P:eContracting.Models.FailedLoginInfoModel.LastFailedAttemptTimestamp">
            <summary>
            Gets or sets the last failed attempt timestamp.
            </summary>
        </member>
        <member name="P:eContracting.Models.FailedLoginInfoModel.FailedAttemptsInfo">
            <summary>
            Gets or sets the failed attempts historical information.
            </summary>
        </member>
        <member name="M:eContracting.Models.FolderItemModel`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.FolderItemModel`1"/> class.
            </summary>
        </member>
        <member name="M:eContracting.Models.FolderItemModel`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.FolderItemModel`1"/> class.
            </summary>
            <param name="items">The items.</param>
        </member>
        <member name="T:eContracting.Models.PageLoginModel">
            <summary>
            Represents login page.
            </summary>
            <seealso cref="T:eContracting.Models.BasePageWithStepsModel" />
        </member>
        <member name="P:eContracting.Models.PageLoginModel.DelayAfterFailedAttemptsTimeSpan">
            <summary>
            Gets the delay after failed attempts as <see cref="T:System.TimeSpan"/>
            </summary>
            <value>
            Parsed value from <see cref="P:eContracting.Models.PageLoginModel.DelayAfterFailedAttempts"/>. If parsing failed, return default value '00:15:00'
            </value>
        </member>
        <member name="P:eContracting.Models.PageLoginModel.AutoGenerateTestableCombinationPlaceholders">
            <summary>
            Gets switch if placeholders of every matrix combination (like /eContracting2Main/eContracting2-login_02_K) for A/B testing headertexts should be added automatically when this page is opened in Edit mode.
            </summary>
        </member>
        <member name="T:eContracting.Models.LOGIN_STATES">
            <summary>
            Prerequisites for log-in procedure.
            </summary>
        </member>
        <member name="F:eContracting.Models.LOGIN_STATES.OK">
            <summary>
            Everything is OK.
            </summary>
        </member>
        <member name="F:eContracting.Models.LOGIN_STATES.OFFER_NOT_FOUND">
            <summary>
            The offer not found by given guid.
            </summary>
        </member>
        <member name="F:eContracting.Models.LOGIN_STATES.INVALID_GUID">
            <summary>
            Provided guid identifier by user is invalid.
            </summary>
        </member>
        <member name="F:eContracting.Models.LOGIN_STATES.USER_BLOCKED">
            <summary>
            User is temporaly blocked due to max failed login attempts.
            </summary>
        </member>
        <member name="F:eContracting.Models.LOGIN_STATES.OFFER_STATE_1">
            <summary>
            The offer state in <see cref="P:eContracting.Models.OfferModel.State"/> equals to 1.
            </summary>
        </member>
        <member name="F:eContracting.Models.LOGIN_STATES.MISSING_BIRTHDAY">
            <summary>
            The missing birthday in <see cref="P:eContracting.Models.OfferModel.Birthday"/>.
            </summary>
        </member>
        <member name="T:eContracting.Models.OfferAttachmentModel">
            <summary>
            Represents file from 'ZCCH_CACHE_API'.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.UniqueKey">
            <summary>
            The unique key.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.IdAttach">
            <summary>
            The identifier of the attachment. 
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.Index">
            <summary>
            Gets or set index.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.MimeType">
            <summary>
            The MIME type of the file.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.OriginalFileName">
            <summary>
            The original file name generated from SAP (technical name).
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.FileName">
            <summary>
            The file name.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.FileExtension">
            <summary>
            The file extension
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.FileNameExtension">
            <summary>
            The file name with extension.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.Description">
            <summary>
            The description.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.Group">
            <summary>
            Gets value of attribute "GROUP" or null. Expected values: KOM1, SEN1, INV1.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.IsGroupObligatory">
            <summary>
            Gets <c>true</c> if there is <see cref="F:eContracting.Constants.FileAttributes.GROUP_OBLIG"/> with value 'X'.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.IsObligatory">
            <summary>
            Determinates if this attachment is obligatory or not.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.IsPrinted">
            <summary>
            Gets <c>true</c> if there is <see cref="F:eContracting.Constants.FileAttributes.PRINTED"/> with value 'X'.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.IsSignReq">
            <summary>
            Gets <c>true</c> if there is <see cref="F:eContracting.Constants.FileAttributes.SIGN_REQ"/> with value 'X'.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.SignedVersion">
            <summary>
            Gets or sets a value indicating whether this version of document is signed.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.FileContent">
            <summary>
            Gets or sets file content. Always returns array.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.Attributes">
            <summary>
            The file attributes. Always returns array.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.GroupGuid">
            <summary>
            Group in which the template is.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.ConsentType">
            <summary>
            The consent type identifier (expected S or P).
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferAttachmentModel.TemplAlcId">
            <summary>
            The template alc identifier
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentModel.IsRequired">
            <summary>
            Gets <c>true</c> is <see cref="F:eContracting.Models.OfferAttachmentModel.IsObligatory"/> == true OR <see cref="F:eContracting.Models.OfferAttachmentModel.IsGroupObligatory"/> == true.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentModel.Size">
            <summary>
            Gets the size.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentModel.SizeLabel">
            <summary>
            Gets size description.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentModel.Template">
            <summary>
            Gets value of attribute "TEMPLATE" or null. Expected values: EES, A10, V01, V02, V03, EPO, AD1, ZPE, ED2, EP2X, DS1, DSE, V04, DP6, DP3.
            </summary>
        </member>
        <member name="M:eContracting.Models.OfferAttachmentModel.#ctor">
            <summary>
            Prevents a default instance of the <see cref="T:eContracting.Models.OfferAttachmentModel"/> class from being created.
            </summary>
        </member>
        <member name="M:eContracting.Models.OfferAttachmentModel.#ctor(eContracting.Models.OfferAttachmentXmlModel)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferAttachmentModel"/> class.
            </summary>
            <param name="template">The template.</param>
        </member>
        <member name="M:eContracting.Models.OfferAttachmentModel.#ctor(eContracting.Models.OfferAttachmentXmlModel,System.String,System.String,eContracting.Models.OfferAttributeModel[],System.Byte[])">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferAttachmentModel"/> class.
            </summary>
            <param name="template">The template.</param>
            <param name="mimeType">Type of the MIME.</param>
            <param name="originalFileName">Name of the original file.</param>
            <param name="attributes">The attributes.</param>
            <param name="content">The content.</param>
        </member>
        <member name="M:eContracting.Models.OfferAttachmentModel.#ctor(eContracting.Models.OfferAttachmentXmlModel,eContracting.Models.OfferFileXmlModel,System.String,eContracting.Models.OfferAttributeModel[])">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferAttachmentModel"/> class.
            </summary>
            <param name="template">The template.</param>
            <param name="file">The file.</param>
            <param name="fileName">Readable file name.</param>
            <param name="attributes">The attributes.</param>
            <exception cref="T:System.ArgumentNullException">template</exception>
            <exception cref="T:System.ArgumentException">Invalid file name (empty name)</exception>
        </member>
        <member name="M:eContracting.Models.OfferAttachmentModel.IsAttributeChecked(System.String)">
            <summary>
            Determines whether an attribute with <paramref name="key"/> has value 'X'.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if is attribute has value 'X', otherwise <c>false</c>.
            </returns>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.Guid">
            <summary>
            Gets or sets uuid.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.Campaign">
            <summary>
            Gets or sets CAMPAIGN value.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.ISU_CONTRACT">
            <summary>
            Gets or sets ISU_CONTRACT from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.DatumUcinnostiDodatku">
            <summary>
            Gets or sets CONTSTART from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.DATE_TO">
            <summary>
            Gets or sets DATE_TO from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.STATUS">
            <summary>
            Gets or sets STATUS from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.PARTNER">
            <summary>
            Gets or sets PARTNER from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.NAME_LAST">
            <summary>
            Gets or sets NAME_LAST from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.NAME_FIRST">
            <summary>
            Gets or sets NAME_FIRST from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.NAME_ORG1">
            <summary>
            Gets or sets NAME_ORG1 from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.BIRTHDT">
            <summary>
            Gets or sets BIRTHDT from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.OrganizationNumber">
            <summary>
            Gets or sets IC from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.EMAIL">
            <summary>
            Gets or sets EMAIL from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.PHONE">
            <summary>
            Gets or sets PHONE from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.EanOrAndEic">
            <summary>
            Gets or sets EXT_UI from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.NumberOfMistoSpotreby">
            <summary>
            Gets or sets VSTELLE from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.NumberOfOdberneMisto">
            <summary>
            Gets or sets ANLAGE from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.NumberOfObchodniDohoda">
            <summary>
            Gets or sets BUAG from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.PscMistaSpotreby">
            <summary>
            Gets or sets PSC_MS from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.PscTrvaleBydliste">
            <summary>
            Gets or sets PSC_ADDR from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferBodyXmlModel.ACCOUNT_NUMBER">
            <summary>
            Gets or sets ACCOUNT_NUMBER from SAP.
            </summary>
        </member>
        <member name="M:eContracting.Models.OfferBodyXmlModel.Get(System.String)">
            <summary>
            Gets the specified XML element by <paramref name="xmlElementAttribuName"/> from this object.
            </summary>
            <param name="xmlElementAttribuName">The XML element name.</param>
            <returns>Value or null.</returns>
        </member>
        <member name="P:eContracting.Models.OfferContentXmlModel.Header">
            <summary>
            Gets or sets header.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferContentXmlModel.Body">
            <summary>
            Gets or sets body.
            </summary>
        </member>
        <member name="T:eContracting.Models.OfferAttributeModel">
            <summary>
            Represent an attribute anywhere in an offer.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferAttributeModel.Index">
            <summary>
            Gets the index.
            </summary>
            <seealso cref="P:eContracting.Services.ZCCH_ST_ATTRIB.ATTRINDX"/>
        </member>
        <member name="P:eContracting.Models.OfferAttributeModel.Key">
            <summary>
            The key.
            </summary>
            <seealso cref="P:eContracting.Services.ZCCH_ST_ATTRIB.ATTRID"/>
        </member>
        <member name="P:eContracting.Models.OfferAttributeModel.Value">
            <summary>
            The value.
            </summary>
            <seealso cref="P:eContracting.Services.ZCCH_ST_ATTRIB.ATTRVAL"/>
        </member>
        <member name="M:eContracting.Models.OfferAttributeModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferAttributeModel"/> class.
            </summary>
        </member>
        <member name="M:eContracting.Models.OfferAttributeModel.#ctor(System.Int32,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferAttributeModel"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:eContracting.Models.OfferAttributeModel.#ctor(eContracting.Services.ZCCH_ST_ATTRIB)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferAttributeModel"/> class.
            </summary>
            <param name="attrib">The attribute.</param>
        </member>
        <member name="M:eContracting.Models.OfferHeaderModel.#ctor(eContracting.Services.ZCCH_ST_HEADER)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferHeaderModel"/> class.
            </summary>
            <param name="header">The header.</param>
        </member>
        <member name="M:eContracting.Models.OfferHeaderModel.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferHeaderModel"/> class.
            </summary>
            <param name="type">The type.</param>
            <param name="key">The key.</param>
            <param name="stat">The stat.</param>
            <param name="valto">The valto.</param>
        </member>
        <member name="T:eContracting.Models.OfferCacheDataModel">
            <summary>
            Identifier for an offer.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferCacheDataModel.Guid">
            <summary>
            Gets offer GUID identifier.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferCacheDataModel.Process">
            <summary>
            Gets offer's process.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferCacheDataModel.ProcessType">
            <summary>
            Gets offer's process type.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferCacheDataModel.IsAccepted">
            <summary>
            Determinates if offer is accepted or not.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferCacheDataModel.IsExpired">
            <summary>
            Determinaes if offer is expired or not.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferCacheDataModel.TextParameters">
            <summary>
            The text parameters from offer.
            </summary>
        </member>
        <member name="M:eContracting.Models.OfferCacheDataModel.#ctor(eContracting.Models.OfferModel)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferCacheDataModel"/> class.
            </summary>
            <param name="offer">The offer.</param>
        </member>
        <member name="M:eContracting.Models.OfferCacheDataModel.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferCacheDataModel"/> class.
            </summary>
            <param name="process">The process.</param>
            <param name="processType">Type of the process.</param>
        </member>
        <member name="M:eContracting.Models.OfferCacheDataModel.#ctor(System.String,System.String,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferCacheDataModel"/> class.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="process">The process.</param>
            <param name="processType">Type of the process.</param>
            <param name="isAccepted">if set to <c>true</c> [is accepted].</param>
            <param name="textParameters">The text parameters.</param>
        </member>
        <member name="P:eContracting.Models.OfferLoginReportModel.Id">
            <summary>
            Gets or sets the identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferLoginReportModel.SessionId">
            <summary>
            Gets or sets session identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferLoginReportModel.LastLoginTime">
            <summary>
            Gets or sets login time.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferLoginReportModel.Guid">
            <summary>
            Gets or sets unique identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferLoginReportModel.OfferTypeIdentifier">
            <summary>
            Gets or sets offer type and identifier.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferLoginReportModel.WrongBirthdayDateCount">
            <summary>
            Gets or sets number of wrong birthday dates.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferLoginReportModel.WrongPostalCodeCount">
            <summary>
            Gets or sets number of wrong postal codes.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferLoginReportModel.WrongResidencePostalCodeCount">
            <summary>
            Gets or sets number of wrong residence postal codes.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferLoginReportModel.WrongIdentityCardNumberCount">
            <summary>
            Gets or sets number of wrong identity cards.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferLoginReportModel.GeneralErrorCount">
            <summary>
            Gets or sets number general errors.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferLoginReportModel.SuccessAttemptCount">
            <summary>
            Gets or sets number of success attenpts.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferModel.Xml">
            <summary>
            Inner XML with content from SAP.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferModel.Version">
            <summary>
            Gets the version of the offer.
            </summary>
            <remarks>
                1 - old offer without bus process type and with text parameters
                2 - new offer with bus process type and 
            </remarks>
        </member>
        <member name="P:eContracting.Models.OfferModel.Guid">
            <summary>
            Gets or sets the unique GUID of this offer.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferModel.IsAccepted">
            <summary>
            Gets or sets flag if offer is accepted.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferModel.IsExpired">
            <summary>
            Gets a value indicating whether offer already expired.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferModel.AcceptedAt">
            <summary>
            Gets or sets infromation when offer was accepted.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferModel.CreatedAt">
            <summary>
            Gets or sets CREATED_AT value.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferModel.HasGDPR">
            <summary>
            Gets or sets information if offer has GDPR.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferModel.GDPRKey">
            <summary>
            Gets or sets GDPRKey.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferModel.Campaign">
            <summary>
            Gets or sets CAMPAIGN value.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferModel.Commodity">
            <summary>
            Gets the commodity (EAN or EIC).
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferModel.State">
            <summary>
            Gets or sets State.
            </summary>
            <remarks>
                Description provided by Tereza:
                <list type="table">
                    <item>1 - Zapsáno</item>    
                    <item>2 - Automatizace (je, že ji můžeme načíst, je jsou dokumenty v pořádku vygenerované)</item>
                    <item>3 - Aktivní</item>
                    <item>4 - Přečteno (se nastavuje, když si zákazník otevře na webu)</item>
                    <item>5 - Akceptováno</item>
                    <item>6 - Přihlášeno (když se poprvé přihlásí)</item>
                    <item>8 - Chyba</item>
                    <item>9 - Zastaralé (když je to stornované (prošlost se totiž ve skutečnosti podle mě kontrolovala podle data)</item>
                </list>
            </remarks>
        </member>
        <member name="F:eContracting.Models.OfferModel.Attributes">
            <summary>
            Attributes from the offer.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferModel.Header">
            <summary>
            Header values from the offer.
            </summary>
        </member>
        <member name="M:eContracting.Models.OfferModel.#ctor(eContracting.Models.OfferXmlModel,System.Int32,eContracting.Models.OfferHeaderModel,System.Boolean,System.Boolean,eContracting.Models.OfferAttributeModel[])">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferModel"/> class.
            </summary>
            <param name="xml">The XML.</param>
            <param name="version">The version.</param>
            <param name="header">The header.</param>
            <param name="isAccepted">if set to <c>true</c> [is accepted].</param>
            <param name="isExpired">if set to <c>true</c> [is expired].</param>
            <param name="attributes">The attributes.</param>
            <exception cref="T:System.ArgumentNullException">
            xml
            or
            header
            or
            attributes
            </exception>
            <exception cref="T:System.ArgumentException">Inner content of {nameof(xml)} cannot be null</exception>
        </member>
        <member name="M:eContracting.Models.OfferModel.GetValue(System.String)">
            <summary>
            Gets value from inner 'Xml.Content.Body' by XML name attribute.
            </summary>
            <param name="xmlElementName">Name of the XML element.</param>
            <returns>Value or null.</returns>
        </member>
        <member name="T:eContracting.Models.PageNewOfferModel">
            <summary>
            Represents model for offer page.
            </summary>
            <seealso cref="T:eContracting.Models.BasePageWithStepsModel" />
        </member>
        <member name="P:eContracting.Models.PageNewOfferModel.GDPRUrl">
            <summary>
            Gets or sets the GDPR URL.
            </summary>
        </member>
        <member name="P:eContracting.Models.PageNewOfferModel.AesEncryptKey">
            <summary>
            Gets or sets the aes encrypt key.
            </summary>
        </member>
        <member name="P:eContracting.Models.PageNewOfferModel.AesEncryptVector">
            <summary>
            Gets or sets the aes encrypt vector.
            </summary>
        </member>
        <member name="P:eContracting.Models.PageNewOfferModel.ConfirmModalWindowTitle">
            <summary>
            Gets or sets title for confirm modal window.
            </summary>
        </member>
        <member name="P:eContracting.Models.PageNewOfferModel.ConfirmModalWindowText">
            <summary>
            Gets or sets text for confirm modal window.
            </summary>
        </member>
        <member name="P:eContracting.Models.PageNewOfferModel.ConfirmModalWindowButtonAcceptLabel">
            <summary>
            Gets or sets label for accept button in confirm modal window.
            </summary>
        </member>
        <member name="P:eContracting.Models.PageNewOfferModel.ConfirmModalWindowButtonCancelLabel">
            <summary>
            Gets or sets label for cancel button in confirm modal window.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferTextModel.Index">
            <summary>
            Gets or sets index.
            </summary>
        </member>
        <member name="F:eContracting.Models.OfferTextModel.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="F:eContracting.Models.OfferTextModel.Text">
            <summary>
            Gets or sets text.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferTextModel.Attributes">
            <summary>
            Gets the attributes.
            </summary>
            <value>
            The attributes.
            </value>
        </member>
        <member name="M:eContracting.Models.OfferTextModel.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.OfferTextModel"/> class.
            </summary>
            <param name="index">The index.</param>
            <param name="name">The name.</param>
            <param name="text">The text.</param>
        </member>
        <member name="P:eContracting.Models.OfferXmlModel.Content">
            <summary>
            Gets or sets inner content.
            </summary>
        </member>
        <member name="T:eContracting.Models.ProcessStepModel">
            <summary>
            Model for step model.
            </summary>
            <seealso cref="T:eContracting.Models.BaseSitecoreModel" />
        </member>
        <member name="P:eContracting.Models.ProcessStepModel.Label">
            <summary>
            Gets or sets the label.
            </summary>
        </member>
        <member name="T:eContracting.Models.ResponseCacheGetModel">
            <summary>
            Represent response from 'CACHE_GET'.
            </summary>
        </member>
        <member name="F:eContracting.Models.ResponseCacheGetModel.Response">
            <summary>
            Raw response from SAP.
            </summary>
        </member>
        <member name="P:eContracting.Models.ResponseCacheGetModel.HasFiles">
            <summary>
            Gets a value indicating whether <see cref="F:eContracting.Models.ResponseCacheGetModel.Response"/> contains files.
            </summary>
        </member>
        <member name="M:eContracting.Models.ResponseCacheGetModel.#ctor(eContracting.Services.ZCCH_CACHE_GETResponse)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Models.ResponseCacheGetModel"/> class.
            </summary>
            <param name="response">The response.</param>
            <exception cref="T:System.ArgumentNullException">response</exception>
        </member>
        <member name="T:eContracting.Models.OfferAttachmentXmlModel">
            <summary>
            Represents file template from <see cref="F:eContracting.OFFER_TYPES.NABIDKA"/>.
            </summary>
            <remarks>This template doesn't contain a file content.</remarks>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentXmlModel.IdAttach">
            <summary>
            Gets or sets identifier of this template. It's not unique in every cases. If there are more attachment with the same value, uniqueness is compared with <see cref="P:eContracting.Models.OfferAttachmentXmlModel.Product"/>.
            </summary>
            <value>Cannot be empty.</value>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentXmlModel.Product">
            <summary>
            Gets or sets additional identifier of this template. Value could be empty. It could be used with <see cref="P:eContracting.Models.OfferAttachmentXmlModel.IdAttach"/>.
            </summary>
            <value>Could be empty.</value>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentXmlModel.Description">
            <summary>
            Gets or sets the description. In some cases it's used as file name.
            </summary>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentXmlModel.Obligatory">
            <summary>
            Gets or sets if this template is obligatory or not.
            </summary>
            <value><see cref="F:eContracting.Constants.FileAttributeValues.CHECK_VALUE"/> or empty.</value>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentXmlModel.Printed">
            <summary>
            Gets or sets if real file exists or it's a template for upload.
            </summary>
            <value><see cref="F:eContracting.Constants.FileAttributeValues.CHECK_VALUE"/> or empty.</value>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentXmlModel.SignReq">
            <summary>
            Gets or sets sing is required for this template.
            </summary>
            <value><see cref="F:eContracting.Constants.FileAttributeValues.CHECK_VALUE"/> or empty.</value>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentXmlModel.Group">
            <summary>
            Gets or sets the group. Expected values: COMMODITY, DSL, NONCOMMODITY.
            </summary>
            <value>Shouldn't be null.</value>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentXmlModel.GroupObligatory">
            <summary>
            Gets or sets templates with the same group are mandatory or not.
            </summary>
            <value><see cref="F:eContracting.Constants.FileAttributeValues.CHECK_VALUE"/> or empty.</value>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentXmlModel.ItemGuid">
            <summary>
            Gets or sets value to get compare text parameters for a group in accept dialog.
            </summary>
            <value>
            The item unique identifier.
            </value>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentXmlModel.ConsentType">
            <summary>
            Gets or sets prefix for the document. Expecetd values: P or S.
            </summary>
            <value>Shouldn't be empty.</value>
        </member>
        <member name="P:eContracting.Models.OfferAttachmentXmlModel.UniqueKey">
            <summary>
            Gets the unique key for this template.
            </summary>
        </member>
        <member name="M:eContracting.Models.OfferAttachmentXmlModel.ToString">
            <summary>
            Converts to string.
            </summary>
            <returns>
            A <see cref="T:System.String" /> with <see cref="P:eContracting.Models.OfferAttachmentXmlModel.IdAttach"/> and <see cref="P:eContracting.Models.OfferAttachmentXmlModel.Description"/>.
            </returns>
        </member>
        <member name="T:eContracting.ServiceFactory">
            <inheritdoc/>
            <seealso cref="T:eContracting.IServiceFactory" />
        </member>
        <member name="M:eContracting.ServiceFactory.CreateApi(eContracting.SignApiServiceOptions)">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.ServiceFactory.CreateApi(eContracting.CacheApiServiceOptions)">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.ServiceFactory.GetBinding(eContracting.BaseApiServiceOptions,System.String)">
            <summary>
            Gets correct binding based on <see cref="F:eContracting.BaseApiServiceOptions.Url"/>.
            </summary>
            <param name="options">The options.</param>
            <param name="name">The name.</param>
            <returns>For <c>https</c> <see cref="T:System.ServiceModel.BasicHttpsBinding"/>, for <c>http</c> <see cref="T:System.ServiceModel.BasicHttpBinding"/>.</returns>
        </member>
        <member name="T:eContracting.CacheApiServiceOptions">
            <summary>
            Settings for <see cref="T:eContracting.IOfferService"/>.
            </summary>
        </member>
        <member name="M:eContracting.CacheApiServiceOptions.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.CacheApiServiceOptions"/> class.
            </summary>
            <param name="url">The URL.</param>
            <param name="base64Username">The base64 username.</param>
            <param name="base64password">The base64password.</param>
        </member>
        <member name="T:eContracting.SignApiServiceOptions">
            <summary>
            Settings for <see cref="T:eContracting.IOfferService"/>.
            </summary>
        </member>
        <member name="M:eContracting.SignApiServiceOptions.#ctor(System.String,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.SignApiServiceOptions"/> class.
            </summary>
            <param name="url">The URL.</param>
            <param name="base64Username">The base64 username.</param>
            <param name="base64password">The base64password.</param>
        </member>
        <member name="T:eContracting.Services.ZCCH_CACHE_GET">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_GET.IV_CCHKEY">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_GET.IV_CCHTYPE">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_GET.IV_GEFILE">
            <remarks/>
        </member>
        <member name="T:eContracting.Services.BAPIRET2">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.TYPE">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.ID">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.NUMBER">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.MESSAGE">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.LOG_NO">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.LOG_MSG_NO">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.MESSAGE_V1">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.MESSAGE_V2">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.MESSAGE_V3">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.MESSAGE_V4">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.PARAMETER">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.ROW">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.FIELD">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.BAPIRET2.SYSTEM">
            <remarks/>
        </member>
        <member name="T:eContracting.Services.ZCCH_ST_FILE">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_FILE.FILEINDX">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_FILE.FILENAME">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_FILE.MIMETYPE">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_FILE.FILECONTENT">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_FILE.ATTRIB">
            <remarks/>
        </member>
        <member name="T:eContracting.Services.ZCCH_ST_ATTRIB">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_ATTRIB.ATTRID">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_ATTRIB.ATTRINDX">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_ATTRIB.ATTRVAL">
            <remarks/>
        </member>
        <member name="T:eContracting.Services.ZCCH_ST_HEADER">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_HEADER.CCHTYPE">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_HEADER.CCHKEY">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_HEADER.CCHSTAT">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_ST_HEADER.CCHVALTO">
            <remarks/>
        </member>
        <member name="T:eContracting.Services.ZCCH_CACHE_GETResponse">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_GETResponse.ES_HEADER">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_GETResponse.ET_ATTRIB">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_GETResponse.ET_FILES">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_GETResponse.ET_RETURN">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_GETResponse.EV_RETCODE">
            <remarks/>
        </member>
        <member name="T:eContracting.Services.ZCCH_CACHE_DEL">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_DEL.IV_CCHKEY">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_DEL.IV_CCHTYPE">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_DEL.IV_COMMIT">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_DEL.IV_DEL_FILES">
            <remarks/>
        </member>
        <member name="T:eContracting.Services.ZCCH_CACHE_DELResponse">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_DELResponse.ET_RETURN">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_DELResponse.EV_RETCODE">
            <remarks/>
        </member>
        <member name="T:eContracting.Services.ZCCH_CACHE_STATUS_SET">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_STATUS_SET.IV_CCHKEY">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_STATUS_SET.IV_CCHTYPE">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_STATUS_SET.IV_COMMIT">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_STATUS_SET.IV_STAT">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_STATUS_SET.IV_TIMESTAMP">
            <remarks/>
        </member>
        <member name="T:eContracting.Services.ZCCH_CACHE_STATUS_SETResponse">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_STATUS_SETResponse.ET_RETURN">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_STATUS_SETResponse.EV_RETCODE">
            <remarks/>
        </member>
        <member name="T:eContracting.Services.ZCCH_CACHE_PUT">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_PUT.IT_ATTRIB">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_PUT.IT_FILES">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_PUT.IV_CCHKEY">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_PUT.IV_CCHTYPE">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_PUT.IV_COMMIT">
            <remarks/>
        </member>
        <member name="T:eContracting.Services.ZCCH_CACHE_PUTResponse">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_PUTResponse.ET_ATTRIB">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_PUTResponse.ET_FILES">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_PUTResponse.ET_RETURN">
            <remarks/>
        </member>
        <member name="P:eContracting.Services.ZCCH_CACHE_PUTResponse.EV_RETCODE">
            <remarks/>
        </member>
        <member name="T:eContracting.SignStamp.invoke">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.invoke.inputPDF">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.invoke.inputPNGSign">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.invoke.overlay">
            <remarks/>
        </member>
        <member name="T:eContracting.SignStamp.BLOB">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.BLOB.contentType">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.BLOB.binaryData">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.BLOB.attachmentID">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.BLOB.remoteURL">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.BLOB.MTOM">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.BLOB.swaRef">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.BLOB.attributes">
            <remarks/>
        </member>
        <member name="T:eContracting.SignStamp.MyMapOf_xsd_string_To_xsd_anyType_Item">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.MyMapOf_xsd_string_To_xsd_anyType_Item.key">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.MyMapOf_xsd_string_To_xsd_anyType_Item.value">
            <remarks/>
        </member>
        <member name="T:eContracting.SignStamp.invokeResponse">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.invokeResponse.errCode">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.invokeResponse.errMsg">
            <remarks/>
        </member>
        <member name="P:eContracting.SignStamp.invokeResponse.outputPDF">
            <remarks/>
        </member>
        <member name="F:eContracting.Constants.FileAttributeValues.SignFileIdAttachValues">
            <summary>
            IDATTACH values for old offers where the value doesn't match with file template.
            </summary>
        </member>
        <member name="F:eContracting.Constants.ErrorCodes.AUTH1_UNKNOWN">
            <summary>
            The authentication process - unknown exception.
            </summary>
        </member>
        <member name="F:eContracting.Constants.ErrorCodes.AUTH1_CACHE">
            <summary>
            Call to CACHE during authentication process.
            </summary>
        </member>
        <member name="F:eContracting.Constants.ErrorCodes.AUTH1_CACHE2">
            <summary>
            Call to CACHE during authentication process - unknown exception.
            </summary>
        </member>
        <member name="F:eContracting.Constants.ErrorCodes.AUTH1_APP">
            <summary>
            The authentication process - application exception.
            </summary>
        </member>
        <member name="F:eContracting.Constants.ErrorCodes.AUTH1_INV_OP">
            <summary>
            The authentication process - invalid operation exception.
            </summary>
        </member>
        <member name="F:eContracting.Constants.ErrorCodes.AUTH2_UNKNOWN">
            <summary>
            The authentication process - unknown exception.
            </summary>
        </member>
        <member name="F:eContracting.Constants.ErrorCodes.AUTH2_CACHE">
            <summary>
            Call to CACHE during authentication process.
            </summary>
        </member>
        <member name="F:eContracting.Constants.ErrorCodes.AUTH2_CACHE2">
            <summary>
            Call to CACHE during authentication process - unknown exception.
            </summary>
        </member>
        <member name="F:eContracting.Constants.ErrorCodes.AUTH2_APP">
            <summary>
            The authentication process - application exception.
            </summary>
        </member>
        <member name="F:eContracting.Constants.ErrorCodes.AUTH2_INV_OP">
            <summary>
            The authentication process - invalid operation exception.
            </summary>
        </member>
        <member name="M:eContracting.Constants.TemplateIds.IsOfferPage(Sitecore.Data.ID)">
            <summary>
            Determines whether <paramref name="templateId"/> contains data with offer.
            </summary>
            <param name="templateId">The template identifier.</param>
        </member>
        <member name="T:eContracting.Extensions">
            <summary>
            All extensions available in core functionality.
            </summary>
        </member>
        <member name="M:eContracting.Extensions.GetItems``1(Glass.Mapper.Sc.ISitecoreService,System.String)">
            <summary>
            Gets children of <typeparamref name="T"/> from folder <paramref name="path"/>.
            </summary>
            <typeparam name="T">Sitecore item model type.</typeparam>
            <param name="service">The service.</param>
            <param name="path">The path.</param>
            <returns>List of found children or empty list.</returns>
        </member>
        <member name="M:eContracting.Extensions.Merge``2(System.Collections.Generic.IDictionary{``0,``1},System.Collections.Generic.IDictionary{``0,``1})">
            <summary>
            Merges two dictionaries.
            </summary>
            <typeparam name="TKey">The type of the key.</typeparam>
            <typeparam name="TValue">The type of the value.</typeparam>
            <param name="source">The source dictionary.</param>
            <param name="second">The second.</param>
        </member>
        <member name="M:eContracting.Extensions.HasValue(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
            <summary>
            Determines whether the specified key has value any value.
            </summary>
            <param name="source">The source.</param>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the specified key has value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:eContracting.IOfferService">
            <summary>
            Service with direct communication to SAP / CACHE.
            </summary>
        </member>
        <member name="M:eContracting.IOfferService.AcceptOffer(eContracting.Models.OfferModel,eContracting.Models.OfferSubmitDataModel,System.String)">
            <summary>
            Accepts the <paramref name="offer"/> synchronously. Calls NABIDKA_PRIJ and set status to 5.
            </summary>
            <param name="offer">Valid offer.</param>
            <param name="data">The submitted data.</param>
            <param name="sessionId">Current session id.</param>
            <returns>True if it was accepted or false.</returns>
            <exception cref="T:eContracting.EcontractingApplicationException">When response from remote server was not success.</exception>
        </member>
        <member name="M:eContracting.IOfferService.ReadOffer(System.String)">
            <summary>
            Reads offer synchronously.
            </summary>
            <param name="guid">Guid identifier.</param>
            <returns>True if it was set or false.</returns>
            <exception cref="T:eContracting.EcontractingApplicationException">When response from remote server was not success.</exception>
        </member>
        <member name="M:eContracting.IOfferService.GetAttachments(eContracting.Models.OfferModel)">
            <summary>
            Gets the files synchronous.
            </summary>
            <param name="offer">The offer with attachment templates.</param>
            <returns>Files in array or null</returns>
        </member>
        <member name="M:eContracting.IOfferService.GetOffer(System.String)">
            <summary>
            Gets the offer by <paramref name="guid"/> with text parameters synchronously.
            </summary>
            <param name="guid">Guid identifier.</param>
            <returns>The offer.</returns>
            <exception cref="T:System.AggregateException">When multiple issues happen in the process.</exception>
        </member>
        <member name="M:eContracting.IOfferService.GetOffer(System.String,System.Boolean)">
            <summary>
            Gets the offer by <paramref name="guid"/> asynchronously.
            </summary>
            <param name="guid">Guid identifier.</param>
            <param name="includeTextParameters">When you need to get <see cref="P:eContracting.Models.OfferModel.TextParameters"/>.</param>
            <returns>The offer.</returns>
            <exception cref="T:System.AggregateException">When multiple issues happen in the process.</exception>
        </member>
        <member name="M:eContracting.IOfferService.SignInOffer(System.String)">
            <summary>
            Make offer <paramref name="guid"/> signed.
            </summary>
            <param name="guid">The unique identifier.</param>
            <returns><c>True</c> if response was OK, otherwise <c>false</c>.</returns>
            <exception cref="T:eContracting.EcontractingApplicationException">When response from remote server was not success.</exception>
        </member>
        <member name="T:eContracting.IAuthenticationService">
            <summary>
            Represents collection of actions for authentication operation.
            </summary>
        </member>
        <member name="M:eContracting.IAuthenticationService.GetLoginState(eContracting.Models.OfferModel,eContracting.Models.LoginTypeModel,System.String,System.String,System.String)">
            <summary>
            Logins the specified offer.
            </summary>
            <seealso cref="T:eContracting.Models.LoginTypeModel"/>
            <param name="offer">The offer.</param>
            <param name="loginType">The login type.</param>
            <param name="birthDay">The birth day.</param>
            <param name="key">The key of login type.</param>
            <param name="value">The value by login type.</param>
            <returns></returns>
        </member>
        <member name="M:eContracting.IAuthenticationService.Login(eContracting.Models.AuthDataModel)">
            <summary>
            Log-in user with <paramref name="authData"/>.
            </summary>
            <param name="authData">Authentication data.</param>
        </member>
        <member name="M:eContracting.IAuthenticationService.IsLoggedIn">
            <summary>
            Determines whether user is logged in.
            </summary>
            <returns>
              <c>true</c> if is logged in; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:eContracting.IAuthenticationService.GetCurrentUser">
            <summary>
            Gets the current user.
            </summary>
            <returns>Data or null.</returns>
        </member>
        <member name="T:eContracting.IUserDataCacheService">
            <summary>
            Cache for simple user data relevant only for current user. Data cannot be shared among sessions.
            </summary>
        </member>
        <member name="M:eContracting.IUserDataCacheService.Set``1(System.String,``0)">
            <summary>
            Adds or rewrite <paramref name="data"/> under specific <paramref name="key"/>.
            </summary>
            <typeparam name="T">Type of data.</typeparam>
            <param name="key">The key.</param>
            <param name="data">The data.</param>
        </member>
        <member name="M:eContracting.IUserDataCacheService.Get``1(System.String)">
            <summary>
            Gets data by <paramref name="key"/>.
            </summary>
            <typeparam name="T">Type of data.</typeparam>
            <param name="key">The key.</param>
            <returns>Object of type <typeparamref name="T"/> or null.</returns>
        </member>
        <member name="M:eContracting.IUserDataCacheService.Remove(System.String)">
            <summary>
            Removes data under specific <paramref name="key"/>.
            </summary>
            <param name="key">The key.</param>
        </member>
        <member name="T:eContracting.IContextWrapper">
            <summary>
            Represents wrapper over context (static) values.
            </summary>
        </member>
        <member name="M:eContracting.IContextWrapper.SetDisplayMode(Sitecore.Sites.DisplayMode)">
            <summary>
            Sets the display mode.
            </summary>
            <param name="model">The model.</param>
        </member>
        <member name="M:eContracting.IContextWrapper.GetSetting(System.String)">
            <summary>
            Gets value from 'Sitecore.Configuration.Settings.GetSetting()'.
            </summary>
            <param name="name">The name.</param>
            <returns>String or null.</returns>
        </member>
        <member name="M:eContracting.IContextWrapper.GetSiteRoot">
            <summary>
            Gets the site root path.
            </summary>
            <returns>Value from 'Sitecore.Context.Site.RootPath'.</returns>
        </member>
        <member name="M:eContracting.IContextWrapper.GetBrowserAgent">
            <summary>
            Gets current browser agent description.
            </summary>
            <returns>Browser agent identifier or null.</returns>
        </member>
        <member name="M:eContracting.IContextWrapper.GetIpAddress">
            <summary>
            Gets current IP address.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eContracting.IContextWrapper.IsNormalMode">
            <summary>
            Determines whether Sitecore context page mode is in normal mode.
            </summary>
        </member>
        <member name="M:eContracting.IContextWrapper.IsPreviewMode">
            <summary>
            Determines whether Sitecore context page mode is in preview mode.
            </summary>
        </member>
        <member name="M:eContracting.IContextWrapper.IsEditMode">
            <summary>
            Determines whether Sitecore context page mode is in editing mode.
            </summary>
        </member>
        <member name="T:eContracting.IFileOptimizer">
            <summary>
            Join file(s) into group and optimize it into PDF file.
            </summary>
        </member>
        <member name="M:eContracting.IFileOptimizer.AddAsync(eContracting.Models.DbUploadGroupFileModel,System.String,System.String,System.String,System.Byte[],System.String,System.String)">
            <summary>
            Adds a file with <paramref name="name" /> to a group with <paramref name="groupKey" />.
            </summary>
            <remarks>
                <para>If <paramref name="group"/> doesn't exist, creates new one.</para>
                <para>
                    Parameter <paramref name="fileId"/> is used to find new file in <see cref="!:OptimizedFileGroupModel.Files"/> collection.
                    If any file with the same <paramref name="fileId"/> already exists in the group, throws <see cref="T:System.ApplicationException"/>.
                </para>
            </remarks>
            <param name="group">Existing group definition from cache. Could be null.</param>
            <param name="groupKey">The group unique key.</param>
            <param name="fileId">Unique file key.</param>
            <param name="name">The file name.</param>
            <param name="content">The content content.</param>
            <param name="sessionId">Current session id.</param>
            <param name="guid">Offer unique identifier.</param>
            <returns>Current state of the group after adding new file.</returns>
            <exception cref="T:System.ApplicationException">Adding failed.</exception>
        </member>
        <member name="M:eContracting.IFileOptimizer.RemoveFileAsync(eContracting.Models.DbUploadGroupFileModel,System.String)">
            <summary>
            Removes specific file with <paramref name="fileId"/> from <paramref name="group"/>.
            </summary>
            <param name="group">Existing group.</param>
            <param name="fileId">The file identifier.</param>
            <returns>Updated group or null if group is empty.</returns>
        </member>
        <member name="M:eContracting.IFileOptimizer.EnforceOfferTotalFilesSizeAsync(System.Collections.Generic.List{eContracting.Models.DbUploadGroupFileModel},eContracting.Models.DbUploadGroupFileModel,System.String)">
            <summary>
            Checks if the last added file does not cause exceeding the resulting total uploaded files size limit
            </summary>
            <param name="allGroups"></param>
            <param name="groupLastAdded"></param>
            <param name="fileIdLastAdded"></param>
        </member>
        <member name="M:eContracting.IFileOptimizer.IsOfferTotalFilesSizeInLimitAsync(System.Int32)">
            <summary>
            Checks if the last added file does not cause exceeding the resulting total uploaded files size limit
            </summary>
            <param name="actualTotalSize">Total group output files size (in bytes)</param>
        </member>
        <member name="T:eContracting.ILoginFailedAttemptBlockerStore">
            <summary>
            Temporary storage for failed login attempts.
            </summary>
        </member>
        <member name="M:eContracting.ILoginFailedAttemptBlockerStore.Add(eContracting.Models.LoginFailureModel)">
            <summary>
            Adds the login attempt.
            </summary>
            <remarks>
                Both <see cref="P:eContracting.Models.LoginFailureModel.IsBirthdateValid"/> and <see cref="P:eContracting.Models.LoginFailureModel.IsValueValid"/> cannot be true.
                <para>Do not throw any exception!</para>
            </remarks>
            <param name="loginAttemptModel">Data about login attempt.</param>
        </member>
        <member name="M:eContracting.ILoginFailedAttemptBlockerStore.IsAllowed(System.String,System.Int32,System.TimeSpan)">
            <summary>
            Determines whether user with <paramref name="guid"/> is allowed to log-in.
            </summary>
            <remarks>
                Do not throw any exception! Instead returns <c>true</c>.
            </remarks>
            <param name="guid">The unique identifier.</param>
            <param name="maxFailedAttempts">The maximum failed attempts.</param>
            <param name="delayAfterFailedAttempts">The delay after failed attempts.</param>
            <returns>
              <c>True</c> if <paramref name="guid"/> can log-in, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:eContracting.ILoginFailedAttemptBlockerStore.Clear(System.String)">
            <summary>
            Removes failure login attempts for specific <see cref="P:eContracting.Models.OfferModel.Guid"/> and allows user to log-in.
            </summary>
            <remarks>Do not throw any exception!</remarks>
            <param name="guid">The offer unique identifier.</param>
        </member>
        <member name="T:eContracting.IOfferAttachmentParserService">
            <summary>
            Represents parser from <see cref="T:eContracting.Services.ZCCH_ST_FILE"/> to <see cref="T:eContracting.Models.OfferAttachmentModel"/> object.
            </summary>
        </member>
        <member name="M:eContracting.IOfferAttachmentParserService.Parse(eContracting.Models.OfferModel,eContracting.Models.OfferFileXmlModel[])">
            <summary>
            Parses raw <paramref name="files"/> into serializable format.
            </summary>
            <param name="offer">The offer.</param>
            <param name="files">The files.</param>
            <returns>Array of files.</returns>
        </member>
        <member name="M:eContracting.IOfferAttachmentParserService.Equals(eContracting.Models.OfferAttachmentXmlModel,eContracting.Models.OfferFileXmlModel)">
            <summary>
            Determinates if <paramref name="template"/> is relevant for this <paramref name="file"/>.
            </summary>
            <param name="template">The template.</param>
            <param name="file">The file.</param>
        </member>
        <member name="M:eContracting.IOfferAttachmentParserService.GetFileByTemplate(eContracting.Models.OfferModel,eContracting.Models.OfferAttachmentXmlModel,eContracting.Models.OfferFileXmlModel[])">
            <summary>
            Find a file which matches to its <paramref name="template"/>.
            </summary>
            <param name="offer">The offer.</param>
            <param name="template">The template.</param>
            <param name="files">The files.</param>
            <returns>Always return a file or throws exception.</returns>
            <exception cref="T:eContracting.EcontractingDataException">When multiple files matches the rules or no file were found.</exception>
        </member>
        <member name="M:eContracting.IOfferAttachmentParserService.MakeCompatible(eContracting.Models.OfferModel,eContracting.Models.OfferFileXmlModel[])">
            <summary>
            Makes compatible offer templates and offer files.
            </summary>
            <param name="offer">The offer.</param>
            <param name="files">The files.</param>
        </member>
        <member name="T:eContracting.IOfferJsonDescriptor">
            <summary>
            Creates prescription for JSON / API for not accepted offer and accepted offer.
            </summary>
        </member>
        <member name="M:eContracting.IOfferJsonDescriptor.GetNew(eContracting.Models.OfferModel)">
            <summary>
            Gets prescription for not accepted offer.
            </summary>
            <param name="offer">The offer.</param>
        </member>
        <member name="M:eContracting.IOfferJsonDescriptor.GetAccepted(eContracting.Models.OfferModel)">
            <summary>
            Gets prescription for accepted offer.
            </summary>
            <param name="offer">The offer.</param>
            <returns></returns>
        </member>
        <member name="T:eContracting.IOfferParserService">
            <summary>
            Represents parser from <see cref="T:eContracting.Models.OfferModel"/> to <see cref="T:eContracting.Models.ResponseCacheGetModel"/> object.
            </summary>
        </member>
        <member name="M:eContracting.IOfferParserService.GenerateOffer(eContracting.Models.ResponseCacheGetModel)">
            <summary>
            Generates offer.
            </summary>
            <param name="response">The response.</param>
            <returns>Return <see cref="T:eContracting.Models.OfferModel"/> or null if there are no files in <see cref="T:eContracting.Models.ResponseCacheGetModel"/>.</returns>
        </member>
        <member name="M:eContracting.IOfferParserService.GetVersion(eContracting.Services.ZCCH_CACHE_GETResponse)">
            <summary>
            Gets offer version from <paramref name="response"/> data.
            </summary>
            <param name="response">The response.</param>
            <returns>Numbered version starting at 1.</returns>
        </member>
        <member name="M:eContracting.IOfferParserService.GetTextParameters(eContracting.Models.OfferFileXmlModel[])">
            <summary>
            Gets the text parameters from given <paramref name="files"/>.
            </summary>
            <remarks>There files needs to have XML path 'form/parameters'.</remarks>
            <param name="files">The files.</param>
            <returns>Dictionary or null.</returns>
        </member>
        <member name="M:eContracting.IOfferParserService.MakeCompatibleParameters(System.Collections.Generic.IDictionary{System.String,System.String},System.Int32)">
            <summary>
            Makes <paramref name="textParameters"/> compatible in respect to offer <paramref name="version"/>.
            </summary>
            <param name="textParameters">The text parameters.</param>
            <param name="version">Offer version.</param>
        </member>
        <member name="T:eContracting.ISettingsReaderService">
            <summary>
            Global settings reader.
            </summary>
        </member>
        <member name="P:eContracting.ISettingsReaderService.SaveFilesToDebugFolder">
            <summary>
            Gets a value indicating whether to save group file to <c>debug</c> folder.
            </summary>
        </member>
        <member name="P:eContracting.ISettingsReaderService.ShowDebugMessages">
            <summary>
            Gets a value indicating whether to show debug messages to frontend.
            </summary>
        </member>
        <member name="P:eContracting.ISettingsReaderService.SessionTimeout">
            <summary>
            Gets the session timeout in minutes.
            </summary>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetDefinitionDefault">
            <summary>
            Gets <c>default</c> definition. Cannot be null.
            </summary>
            <returns>The definition.</returns>
            <exception cref="T:eContracting.EcontractingMissingDatasourceException">Default definition combination not found. Cannot proceed with other execution without appropriate data.</exception>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetDefinition(eContracting.Models.OfferModel)">
            <summary>
            Gets definition by <see cref="P:eContracting.Models.OfferModel.Process"/> and <see cref="P:eContracting.Models.OfferModel.ProcessType"/> from '/sitecore/content/eContracting2/Definitions'.
            </summary>
            <param name="offer">The offer.</param>
            <returns>Definition or <see cref="T:System.ApplicationException"/> when not found.</returns>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetDefinition(System.String,System.String)">
            <summary>
            Gets definition by <paramref name="process"/> and <paramref name="processType"/> from '/sitecore/content/eContracting2/Definitions'.
            </summary>
            <param name="process">The process.</param>
            <param name="processType">Type of the process.</param>
            <returns>Definition matched by <paramref name="process"/> and <paramref name="processType"/> or default one.</returns>
            <exception cref="T:System.ApplicationException">When even default definition was not found.</exception>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetLoginTypes(eContracting.Models.OfferModel)">
            <summary>
            Gets available login types for <paramref name="offer"/> defined in <see cref="T:eContracting.Models.DefinitionCombinationModel"/>.
            </summary>
            <param name="offer">The offer.</param>
            <returns>List of defined login types or if there is not defined any, one random login type from all of them.</returns>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetAllProcesses">
            <summary>
            Gets all processes from '/sitecore/content/eContracting2/Settings/Processes'.
            </summary>
            <returns>List of all defined processes.</returns>
            <exception cref="T:eContracting.EcontractingMissingDatasourceException">No processes found.</exception>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetAllProcessTypes">
            <summary>
            Gets all process types from '/sitecore/content/eContracting2/Settings/ProcessTypes'.
            </summary>
            <returns>List of all defined process types.</returns>
            <exception cref="T:eContracting.EcontractingMissingDatasourceException">No process types found</exception>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetAllLoginTypes">
            <summary>
            Gets all login types from '/sitecore/content/eContracting2/Settings/LoginTypes'.
            </summary>
            <returns>List of all defined login types.</returns>
            <exception cref="T:eContracting.EcontractingMissingDatasourceException">No login types found</exception>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetApiServiceOptions">
            <summary>
            Gets configuration for <see cref="T:eContracting.IOfferService"/>.
            </summary>
            <returns>The configuration.</returns>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetSignApiServiceOptions">
            <summary>
            Gets configuration for <see cref="T:eContracting.ISignService"/>.
            </summary>
            <returns>The configuration.</returns>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetPageLink(eContracting.PAGE_LINK_TYPES)">
            <summary>
            Gets url from site settings.
            </summary>
            <param name="type">The type.</param>
            <returns>Url or exception.</returns>
            <exception cref="T:System.InvalidOperationException">When <see cref="T:eContracting.PAGE_LINK_TYPES"/> cannot be resolved.</exception>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetSiteSettings">
            <summary>
            Gets the site settings.
            </summary>
            <returns>Model or exception.</returns>
            <exception cref="T:eContracting.EcontractingMissingDatasourceException">When settings cannot be found.</exception>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetSteps(eContracting.Models.ProcessStepModel)">
            <summary>
            Get all steps from collection where <paramref name="currentStep"/> is in and mark current as '<see cref="P:eContracting.Models.ProcessStepModel.IsSelected"/> = <c>true</c>'.
            </summary>
            <param name="currentStep">The current step.</param>
            <returns>Array of all related steps.</returns>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetCustomDatabaseConnectionString">
            <summary>
            Gets connection string for <see cref="T:eContracting.IUserFileCacheService"/>.
            </summary>
            <returns></returns>
        </member>
        <member name="M:eContracting.ISettingsReaderService.GetBackCompatibleTextParametersKeys(System.Int32)">
            <summary>
            Gets mapping from old keys to new ones with respect to offer <paramref name="version"/>.
            </summary>
            <remarks>
                <para><see cref="P:System.Collections.Generic.KeyValuePair`2.Key"/> is what you have.</para>
                <para><see cref="P:System.Collections.Generic.KeyValuePair`2.Value"/> is what you need.</para>
            </remarks>
            <param name="version">Offer version.</param>
        </member>
        <member name="T:eContracting.ISignService">
            <summary>
            Represents sign service for documents.
            </summary>
        </member>
        <member name="M:eContracting.ISignService.Sign(eContracting.Models.OfferModel,eContracting.Models.OfferAttachmentModel,System.Byte[])">
            <summary>
            Sign specifi <paramref name="file"/> with <paramref name="signature"/>.
            </summary>
            <param name="offer">The offer.</param>
            <param name="file">The file.</param>
            <param name="signature">The signature.</param>
            <returns>New attachment model cloned from <paramref name="file"/> with new <see cref="F:eContracting.Models.OfferAttachmentModel.FileContent"/>.</returns>
        </member>
        <member name="T:eContracting.EcontractingMissingDatasourceException">
            <summary>
            Represents missing datasouce.
            </summary>
            <seealso cref="T:System.InvalidOperationException" />
        </member>
        <member name="M:eContracting.EcontractingMissingDatasourceException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.EcontractingMissingDatasourceException"/> class.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:eContracting.EcontractingMissingDatasourceException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.EcontractingMissingDatasourceException"/> class.
            </summary>
            <param name="message">The error message that explains the reason for the exception.</param>
            <param name="innerException">The exception that is the cause of the current exception. If the <paramref name="innerException" /> parameter is not a null reference (Nothing in Visual Basic), the current exception is raised in a catch block that handles the inner exception.</param>
        </member>
        <member name="T:eContracting.OFFER_TYPES">
            <summary>
            Type of offers presented in SAP.
            </summary>
        </member>
        <member name="F:eContracting.OFFER_TYPES.NABIDKA">
            <summary>
            Type "NABIDKA" contains basic information with textations.
            </summary>
        </member>
        <member name="F:eContracting.OFFER_TYPES.NABIDKA_XML">
            <summary>
            Legacy type "NABIDKA_XML" contains only textations.
            </summary>
        </member>
        <member name="F:eContracting.OFFER_TYPES.NABIDKA_PDF">
            <summary>
            The "NABIDKA_PDF" contains attached files for new offer.
            </summary>
        </member>
        <member name="F:eContracting.OFFER_TYPES.NABIDKA_ARCH">
            <summary>
            Type "NABIDKA_ARCH" contains attached files for accepted offer.
            </summary>
        </member>
        <member name="T:eContracting.PAGE_LINK_TYPES">
            <summary>
            Enumeration of page link types defined on <c>/sitecore/content/eContracting2</c>.
            </summary>
        </member>
        <member name="F:eContracting.PAGE_LINK_TYPES.SessionExpired">
            <summary>
            Expired session.
            </summary>
        </member>
        <member name="F:eContracting.PAGE_LINK_TYPES.UserBlocked">
            <summary>
            User is blocked.
            </summary>
        </member>
        <member name="F:eContracting.PAGE_LINK_TYPES.Offer">
            <summary>
            The offer.
            </summary>
        </member>
        <member name="F:eContracting.PAGE_LINK_TYPES.AcceptedOffer">
            <summary>
            Offer is accepted.
            </summary>
        </member>
        <member name="F:eContracting.PAGE_LINK_TYPES.WrongUrl">
            <summary>
            Wrong url.
            </summary>
        </member>
        <member name="F:eContracting.PAGE_LINK_TYPES.OfferExpired">
            <summary>
            Offer expired.
            </summary>
        </member>
        <member name="F:eContracting.PAGE_LINK_TYPES.ThankYou">
            <summary>
            Thank you link.
            </summary>
        </member>
        <member name="F:eContracting.PAGE_LINK_TYPES.SystemError">
            <summary>
            System error link.
            </summary>
        </member>
        <member name="F:eContracting.PAGE_LINK_TYPES.Login">
            <summary>
            Login page.
            </summary>
        </member>
        <member name="T:eContracting.Rules.Conditions.WhenOfferHasSpecificProcessCondition`1">
            <summary>
            Evaluates if current logged-in user's offer has required process.
            </summary>
            <typeparam name="T">The rule context.</typeparam>
            <seealso cref="T:Sitecore.Rules.Conditions.WhenCondition`1" />
        </member>
        <member name="P:eContracting.Rules.Conditions.WhenOfferHasSpecificProcessCondition`1.ProcessId">
            <summary>
            Gets or sets the process identifier.
            </summary>
        </member>
        <member name="M:eContracting.Rules.Conditions.WhenOfferHasSpecificProcessCondition`1.Execute(`0)">
            <summary>
            Executes the specified rule context.
            </summary>
            <param name="ruleContext">The rule context.</param>
            <returns>
                <c>True</c> if match found in <see cref="T:eContracting.Models.AuthDataModel"/>, otherwise <c>false</c>.
                Also <c>false</c> if <see cref="P:eContracting.Rules.Conditions.WhenOfferHasSpecificProcessCondition`1.ProcessId"/> doesn't exist or user is not logged in.
            </returns>
        </member>
        <member name="T:eContracting.Rules.Conditions.WhenOfferHasSpecificProcessTypeCondition`1">
            <summary>
            Evaluates if current logged-in user's offer has required process type.
            </summary>
            <typeparam name="T">The rule context.</typeparam>
            <seealso cref="T:Sitecore.Rules.Conditions.WhenCondition`1" />
        </member>
        <member name="P:eContracting.Rules.Conditions.WhenOfferHasSpecificProcessTypeCondition`1.ProcessTypeId">
            <summary>
            Gets or sets the process type identifier.
            </summary>
        </member>
        <member name="M:eContracting.Rules.Conditions.WhenOfferHasSpecificProcessTypeCondition`1.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:eContracting.Rules.Conditions.WhenOfferHasSpecificProcessTypeCondition`1"/> class.
            </summary>
        </member>
        <member name="M:eContracting.Rules.Conditions.WhenOfferHasSpecificProcessTypeCondition`1.Execute(`0)">
            <summary>
            Executes the specified rule context.
            </summary>
            <param name="ruleContext">The rule context.</param>
            <returns>
                <c>True</c> if match found in <see cref="T:eContracting.Models.AuthDataModel"/>, otherwise <c>false</c>.
                Also <c>false</c> if <see cref="P:eContracting.Rules.Conditions.WhenOfferHasSpecificProcessTypeCondition`1.ProcessTypeId"/> doesn't exist or user is not logged in.
            </returns>
        </member>
        <member name="T:eContracting.SitecoreContextWrapper">
            <summary>
            Wrapper over 'Sitecore.Context'.
            </summary>
            <seealso cref="T:eContracting.IContextWrapper" />
        </member>
        <member name="M:eContracting.SitecoreContextWrapper.GetBrowserAgent">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreContextWrapper.GetIpAddress">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreContextWrapper.GetSetting(System.String)">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreContextWrapper.GetSiteRoot">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreContextWrapper.IsEditMode">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreContextWrapper.IsNormalMode">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreContextWrapper.IsPreviewMode">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreContextWrapper.SetDisplayMode(Sitecore.Sites.DisplayMode)">
            <inheritdoc/>
        </member>
        <member name="F:eContracting.Utils.RegexAttrStyle">
            <summary>
            Regular expression for HTML attribute ' style="..."'.
            </summary>
        </member>
        <member name="F:eContracting.Utils.RegexAttrXmlNamespace">
            <summary>
            Regular expression for XML attribute ' xmlns="..."'.
            </summary>
        </member>
        <member name="M:eContracting.Utils.GetReadableFileSize(System.Int32)">
            <summary>
            Gers readable size.
            </summary>
            <seealso cref="!:https://stackoverflow.com/questions/281640/how-do-i-get-a-human-readable-file-size-in-bytes-abbreviation-using-net"/>
            <param name="size">The size.</param>
        </member>
        <member name="M:eContracting.Utils.GetQueryString(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Gets the query string from <paramref name="collection"/>.
            </summary>
            <param name="collection">The collection.</param>
            <returns>Query string representation from <paramref name="collection"/> items.</returns>
        </member>
        <member name="M:eContracting.Utils.GetUniqueKey(eContracting.Models.LoginTypeModel,eContracting.Models.OfferModel)">
            <summary>
            Gets the unique key for login type in a login view.
            </summary>
            <param name="loginType">Type of the login.</param>
            <param name="offer">The offer.</param>
            <returns>Generated key.</returns>
        </member>
        <member name="M:eContracting.Utils.GetUniqueKey(eContracting.Models.OfferAttachmentXmlModel)">
            <summary>
            Gets the unique key for template document.
            </summary>
            <param name="template">The template.</param>
            <returns>Hash of <see cref="P:eContracting.Models.OfferAttachmentXmlModel.IdAttach"/> + <see cref="P:eContracting.Models.OfferAttachmentXmlModel.Group"/> + <see cref="P:eContracting.Models.OfferAttachmentXmlModel.Description"/></returns>
        </member>
        <member name="M:eContracting.Utils.ReplaceXmlAttributes(System.String)">
            <summary>
            Replaces the HTML attribute <c>style</c> and XML attribute <c>xmlns</c> from given <paramref name="input"/> string.
            </summary>
            <param name="input">The input.</param>
            <returns>Clean up string.</returns>
        </member>
        <member name="M:eContracting.Utils.GetIpAddress">
            <summary>
            Gets value from 'HttpContext.Current.Request', first try take it from 'ServerVariables["HTTP_X_FORWARDED_FOR"]', if it's empty, try take it from 'ServerVariables["REMOTE_ADDR"]'.
            </summary>
        </member>
        <member name="M:eContracting.Utils.CreateAttributesFromTemplate(eContracting.Models.OfferAttachmentXmlModel)">
            <summary>
            Creates the attribute(s) from template.
            </summary>
            <param name="template">The template.</param>
            <returns>Collection with IDATTACH attribute.</returns>
        </member>
        <member name="M:eContracting.Utils.GetReplacedTextTokens(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Replaces placeholders in <paramref name="text"/> (e.g.: {PERSON_ADDRESS}) with key / value from <paramref name="textParameters"/>.
            </summary>
            <param name="text">The original text.</param>
            <param name="textParameters">The text parameters.</param>
            <returns>Modified string.</returns>
        </member>
        <member name="T:eContracting.ILogger">
            <summary>
            Represents abstration layer for logger.
            </summary>
        </member>
        <member name="M:eContracting.ILogger.Info(System.String,System.String)">
            <summary>
            Add <c>info</c> log <paramref name="message"/>.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:eContracting.ILogger.Debug(System.String,System.String)">
            <summary>
            Add <c>debug</c> log <paramref name="message"/>.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:eContracting.ILogger.Warn(System.String,System.String)">
            <summary>
            Add <c>warning</c> log <paramref name="message"/>.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:eContracting.ILogger.Error(System.String,System.String)">
            <summary>
            Add <c>error</c> log <paramref name="message"/>.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:eContracting.ILogger.Error(System.String,System.Exception)">
            <summary>
            Add <c>error</c> log message from <paramref name="exception"/> with its details.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:eContracting.ILogger.Error(System.String,System.String,System.Exception)">
            <summary>
            Add <c>error</c> log <paramref name="message"/> with <paramref name="exception"/> details.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:eContracting.ILogger.Fatal(System.String,System.String)">
            <summary>
            Add <c>fatal</c> log <paramref name="message"/>.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:eContracting.ILogger.Fatal(System.String,System.Exception)">
            <summary>
            Add <c>fatal</c> log message from <paramref name="exception"/> with its details.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="M:eContracting.ILogger.Fatal(System.String,System.String,System.Exception)">
            <summary>
            Add <c>fatal</c> log <paramref name="message"/> with <paramref name="exception"/> details.
            </summary>
            <param name="guid">The unique identifier.</param>
            <param name="message">The message.</param>
            <param name="exception">The exception.</param>
        </member>
        <member name="T:eContracting.SitecoreLogger">
            <summary>
            Wrapper over Sitecore logger.
            </summary>
            <seealso cref="T:eContracting.ILogger" />
        </member>
        <member name="M:eContracting.SitecoreLogger.Info(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreLogger.Debug(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreLogger.Warn(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreLogger.Error(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreLogger.Error(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreLogger.Error(System.String,System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreLogger.Fatal(System.String,System.String)">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreLogger.Fatal(System.String,System.Exception)">
            <inheritdoc/>
        </member>
        <member name="M:eContracting.SitecoreLogger.Fatal(System.String,System.String,System.Exception)">
            <inheritdoc/>
        </member>
    </members>
</doc>
